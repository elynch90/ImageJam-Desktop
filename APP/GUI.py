# DEPENDENCIES
import PySimpleGUI as sg
import base64
import numpy as np
import tkinter as tk
from ImageJam import invert_img, save_img, upload_img, image_subupdate


# some useful variables
img_w = 700  # DEFAULT IMG WIDTH
img_h = 550  # DEFAULT IMG HEIGHT
r_prev = 0  # PREVIOUS VALUES TO CHECK FOR PARAMETER CHANGE
g_prev = 0
b_prev = 0
alpha = 255
invert_flag = False  # COLOR INVERSION FLAG

# set color theme
# sg.theme('darkteal5')
# py simple gui layout as generated by nested list
gui_layout = [[sg.Text('ImageJam by spacewaves', font=220,
                       text_color="Silver")],
              [sg.Text('Import Image: '), sg.Input(), sg.FileBrowse(),
               sg.Button('Upload Image', key='UPLOAD_IMG')],
              [sg.Image("", size=(img_w, img_h),
                        # set the key in order to access the
                        # window element during the runtime loop
                        key="MAIN_IMG", pad=(20, 20))],
              [sg.Text('Red'), sg.Slider([-255, 255], orientation="horizontal",
                                         default_value=0, key='rSlider')],
              [sg.Text('Green'), sg.Slider([-255, 255],
                                           orientation="horizontal",
                                           default_value=0, key='gSlider')],
              [sg.Text('Blue'), sg.Slider([-255, 255],
                                          orientation="horizontal",
                                          default_value=0, key='bSlider')],
              [sg.Text('Alpha'), sg.Slider([-255, 255],
               orientation="horizontal", default_value=0, key='alphaSlider')],
              [sg.Button('Invert', key='INVERT')],
              [sg.Button('Advanced', key='ADVANCED'),
               sg.Button("Save as", key='SAVE')],
              [sg.Text(key="SAVEDIR")],
              [sg.Text('copyright heady studios 2020',
               font=220, text_color="Silver")]]


# create the main window for the gui
window = sg.Window("ImageJam", gui_layout, margins=(100, 50))

# Event Loop to process "events" and get the "values" of the inputs
while True:
    event, values = window.read(timeout=100)
    if values[0] != '':
        # set the current image path
        cur_filepath = values[0]
        r_val, g_val = values['rSlider'], values['gSlider']
        b_val = values['bSlider']
        if r_val != r_prev or g_val != g_prev or b_val != b_prev:
            image_subupdate(cur_filepath, r_val, g_val, b_val, alpha,
                            img_w, img_h, invert_flag, window)
        r_prev, g_prev, b_prev = r_val, g_val, b_val
    if event == 'INVERT':
        invert_img(cur_filepath, r_val, g_val, b_val,
                   alpha, img_w, img_h, invert_flag)
    if event == 'UPLOAD_IMG' and cur_filepath != ' ':
        upload_img(cur_filepath, r_val, g_val, b_val, alpha,
                   img_w, img_h, invert_flag, window)

    # slider colorizer listener awaiting changes to slider values
    # save image event
    if event == "SAVE":
        save_img(cur_filepath, r_val, g_val, b_val, alpha, invert_flag, window)
    # if user closes window or clicks cancel
    if event == sg.WIN_CLOSED or event == 'Cancel':
        break
# on exit
window.close()
